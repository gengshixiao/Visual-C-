#include <windows.h>
#include <stdio.h>


LRESULT CALLBACK WinSunProc(HWND hwnd, UINT uMsg, WPARAM wParam,
	LPARAM lParam);    //回调函数


int WINAPI WinMain(HINSTANCE hInstance,
	HINSTANCE hPrevInstance,
	LPSTR lpCmdLine,
	int nShowCmd)
{
	WNDCLASS wndcls;    //实例化
	wndcls.cbClsExtra = 0;   //额外的类的附加字节数
	wndcls.cbWndExtra = 0;   //窗口额外的附加字节数
	wndcls.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);  //背景颜色，GetStockObject()函数的返回值是一个HGDIOBJ格式的，强制转换成HBRUSH格式的赋值
	wndcls.hCursor = LoadCursor(NULL, IDC_CROSS);  //光标的类型
	wndcls.hIcon = LoadIcon(NULL, IDI_ERROR);   //图标
	wndcls.hInstance = hInstance;              //应用程序的实例号
	wndcls.lpfnWndProc = WinSunProc;       //窗口过程函数
	wndcls.lpszClassName = "热爱游戏";  //类名
	wndcls.lpszMenuName = NULL;   //菜单名
	wndcls.style = CS_HREDRAW | CS_VREDRAW; //水平重画和垂直重画


	RegisterClass(&wndcls);   //注册窗口类


	HWND hwnd;   //实例化一个句柄
	hwnd = CreateWindow("热爱游戏", "Visual C++ 游戏开发", WS_OVERLAPPEDWINDOW, 200, 200, 600, 400, NULL, NULL, hInstance, NULL); //建立一个窗口

	ShowWindow(hwnd, SW_SHOWNORMAL);   //显示窗口
	UpdateWindow(hwnd);  //更新窗口

	MSG msg;   //消息机制
	while (GetMessage(&msg, NULL, 0, 0))    //消息循环
	{
		TranslateMessage(&msg);   //将传来的消息翻译
		DispatchMessage(&msg);    //
	}
	return 0;
}

LRESULT CALLBACK WinSunProc(HWND hwnd,
	UINT uMsg,
	WPARAM wParam,
	LPARAM lParam)
{
	char tmsg[128] = { 0 };
	int num1, num2, num3, num4, num5;
	num1=11;
	num2=12;
	num3=13;
	num4 = 14;
	num5 = 15;
	sprintf_s(tmsg, "1+10=%d 2+10=%d 3+10=%d 4+10=%d 5+10=%d", num1, num2, num3, num4, num5);
	switch (uMsg) {
	/*case WM_CHAR:
		char szChar[20];
		sprintf_s(szChar, "char is %d", wParam);    //sprintf_s和sprintf的区别
		MessageBox(hwnd, szChar, "游戏", 0);
		break;
	case WM_LBUTTONDOWN:
		MessageBox(hwnd, "mouse clicked", "游戏", 0);
		HDC hdc;
		hdc = GetDC(hwnd);
		TextOut(hdc, 200, 0, "Visual C++ 游戏开发", strlen("Visual C++ 游戏开发"));
		ReleaseDC(hwnd, hdc);
		break;*/
	case WM_PAINT:
		HDC hDC;
		PAINTSTRUCT ps;
		hDC = BeginPaint(hwnd, &ps);
		TextOut(hDC, 200, 0, tmsg, strlen(tmsg));
		EndPaint(hwnd, &ps);
		break;
	case WM_CLOSE:
		if (IDYES == MessageBox(hwnd, "是否真的结束？", "游戏开发", MB_YESNO))
		{
			DestroyWindow(hwnd);  //销毁窗口
		}
		break;
	case WM_DESTROY:
		PostQuitMessage(0);
		break;
	default:
		return DefWindowProc(hwnd, uMsg, wParam, lParam);


	}
	return 0;


}
